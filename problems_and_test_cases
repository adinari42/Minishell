/***************
not working:
****************/

export a=1 | cat 			(does not behave like bash, bash does not export the variable and does not block/'hang')
grep -Hirn "parse error" .	(quotes problem, outputs lines that don't contain parse error)
echo "'$USER'"				(should output adinari or slakner, but it just outputs a single ' (single quote))

minishell sometimes 'hangs' and does not display the next prompt after input. Seems to happen after an unclose quotes error, but I'm not sure.
"" | "" | ""

dprintf is a forbidden function

exit 7 :    exit does not exit with the exit code given as argument, using echo $? after exiting must show 7
exit aaasdasdasdas : must exit with 255 failure code , and print “minishell: exit: asdasdasdas: numeric argument required”

exit code of 'Ctrl-\' after running a blocking command like cat should be 131
Try 'ctrl-C' after running a blocking command like cat without arguments or grep “something“. :  “Minishell$ Minishell$” appears in prompt, could be that pressing ctrl-c triggers 2 signals rapidly, also exit code of that must be 130.
occasional segfault on starting - something in pipes.c when elements get deleted?

none of the builtins properly handle exit codes, they need to go into $?


'Minishell$ env | grep HOME=/
grep: /: Is a directory '
/***************
to check:
****************/
do all the builtins work when the input starts with spaces?
maybe put skip_spaces at the start of tokenizing function

/***************
working atm:
****************/

export foo=3
echo "foo" > bar
< infile cat
cat main.c
< infile | cat
[input of spaces only]
echo foo$USER
echo "foo" | echo "bar"
echo "foo"   "foo"			
echo "foo" |||
|||							
echo "'$USER'"
echo lllllll          kkkkkkkk 
echo "foo ||||
echo "'"
ctrl-\ in a prompt after you wrote some stuff (should not do anything : pressing should not make cursor jump to beginning of prompt line)